---
source: common/parser/src/lib.rs
expression: sdl
---
type Author {
	name: String!
	lastname: String!
	pseudo: String
	truc: Truc!
}
"""
Author input type.
"""
input AuthorInput {
	name: String!
	lastname: String!
	pseudo: String
	truc: TrucInput!
}
type Mutation {
	"""
	Create a Todo
	"""
	todoCreate(input: TodoCreateInput!): TodoCreatePayload
	"""
	Update a Todo
	"""
	todoUpdate(id: ID!, input: TodoUpdateInput!): TodoUpdatePayload
	"""
	Delete a Todo by ID
	"""
	todoDelete(id: ID!): TodoDeletePayload
}
type PageInfo {
	hasPreviousPage: Boolean!
	hasNextPage: Boolean!
	startCursor: String
	endCursor: String
}
type Query {
	"""
	Query a single Todo by an ID or a unique field
	"""
	todo(by: TodoByInput): Todo
	"""
	Paginated query to fetch the whole list of `Todo`.
	"""
	todoCollection(after: String, before: String, first: Int, last: Int): TodoConnection
}
type Todo {
	id: ID!
	content: String!
	author: Author
}
input TodoByInput {
	id: ID
}
type TodoConnection {
	"""
	Information to aid in pagination
	"""
	pageInfo: PageInfo!
	edges: [TodoEdge]
}
"""
Input to create a new Todo
"""
input TodoCreateInput {
	content: String!
	author: AuthorInput
}
type TodoCreatePayload {
	todo: Todo
}
type TodoDeletePayload {
	deletedId: ID!
}
type TodoEdge {
	node: Todo!
	cursor: String!
}
"""
Input to create a new Todo
"""
input TodoUpdateInput {
	content: String
	author: AuthorInput
}
type TodoUpdatePayload {
	todo: Todo
}
type Truc {
	name: String!
}
"""
Truc input type.
"""
input TrucInput {
	name: String!
}
schema {
	query: Query
	mutation: Mutation
}

