---
source: common/parser/src/tests.rs
expression: req_string_a
---
{
  "auth": {
    "allowed_group_ops": {},
    "allowed_owner_ops": 0,
    "allowed_private_ops": 0,
    "jwks_providers": [],
    "jwt_providers": [],
    "oidc_providers": []
  },
  "directives": {
    "include": {
      "args": {
        "if": {
          "D": null,
          "V": null,
          "d": "Included when true.",
          "i": false,
          "n": "if",
          "t": "Boolean!"
        }
      },
      "description": "Directs the executor to include this field or fragment only when the `if` argument is true.",
      "is_repeatable": false,
      "locations": [
        "FIELD",
        "FRAGMENT_SPREAD",
        "INLINE_FRAGMENT"
      ],
      "name": "include"
    },
    "live": {
      "args": {},
      "description": "Directs the executor to return values as a Streaming response.",
      "is_repeatable": false,
      "locations": [
        "QUERY"
      ],
      "name": "live"
    },
    "oneOf": {
      "args": {},
      "description": "Indicates that an input object is a oneOf input object",
      "is_repeatable": false,
      "locations": [
        "INPUT_OBJECT"
      ],
      "name": "oneOf"
    },
    "skip": {
      "args": {
        "if": {
          "D": null,
          "V": null,
          "d": "Skipped when true.",
          "i": false,
          "n": "if",
          "t": "Boolean!"
        }
      },
      "description": "Directs the executor to skip this field or fragment when the `if` argument is true.",
      "is_repeatable": false,
      "locations": [
        "FIELD",
        "FRAGMENT_SPREAD",
        "INLINE_FRAGMENT"
      ],
      "name": "skip"
    }
  },
  "disable_introspection": false,
  "enable_caching": false,
  "enable_federation": false,
  "federation_subscription": false,
  "http_headers": {},
  "implements": {},
  "mutation_type": "Mutation",
  "query_type": "Query",
  "schemas": [
    [
      0,
      {
        "fields": [
          {
            "data_type": "Utf8",
            "dict_id": 0,
            "dict_is_ordered": false,
            "metadata": {},
            "name": "title",
            "nullable": true
          },
          {
            "data_type": "Utf8",
            "dict_id": 0,
            "dict_is_ordered": false,
            "metadata": {},
            "name": "id",
            "nullable": false
          },
          {
            "data_type": "Utf8",
            "dict_id": 0,
            "dict_is_ordered": false,
            "metadata": {},
            "name": "updatedAt",
            "nullable": false
          },
          {
            "data_type": "Utf8",
            "dict_id": 0,
            "dict_is_ordered": false,
            "metadata": {},
            "name": "createdAt",
            "nullable": false
          },
          {
            "data_type": "Utf8",
            "dict_id": 0,
            "dict_is_ordered": false,
            "metadata": {},
            "name": "__type",
            "nullable": false
          },
          {
            "data_type": "Utf8",
            "dict_id": 0,
            "dict_is_ordered": false,
            "metadata": {},
            "name": "__gsi1pk",
            "nullable": true
          },
          {
            "data_type": "Utf8",
            "dict_id": 0,
            "dict_is_ordered": false,
            "metadata": {},
            "name": "__gsi1sk",
            "nullable": true
          },
          {
            "data_type": "Utf8",
            "dict_id": 0,
            "dict_is_ordered": false,
            "metadata": {},
            "name": "__gsi2pk",
            "nullable": false
          },
          {
            "data_type": "Utf8",
            "dict_id": 0,
            "dict_is_ordered": false,
            "metadata": {},
            "name": "__gsi2sk",
            "nullable": false
          }
        ],
        "metadata": {}
      }
    ]
  ],
  "search_config": {
    "indices": {}
  },
  "subscription_type": null,
  "types": {
    "Boolean": {
      "S": {
        "d": "The `Boolean` scalar type represents `true` or `false`.",
        "n": "Boolean",
        "p": "BestEffort",
        "s": null
      }
    },
    "DateTime": {
      "S": {
        "d": "A date-time string at UTC, such as 2007-12-03T10:15:30Z, is compliant with the date-time format outlined in section 5.6 of the RFC 3339\nprofile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.\n\nThis scalar is a description of an exact instant on the timeline such as the instant that a user account was created.\n\n# Input Coercion\n\nWhen expected as an input type, only RFC 3339 compliant date-time strings are accepted. All other input values raise a query error indicating an incorrect type.\n\n# Result Coercion\n\nWhere an RFC 3339 compliant date-time string has a time-zone other than UTC, it is shifted to UTC.\nFor example, the date-time string 2016-01-01T14:10:20+01:00 is shifted to 2016-01-01T13:10:20Z.",
        "n": "DateTime",
        "p": "BestEffort",
        "s": "https://datatracker.ietf.org/doc/html/rfc3339"
      }
    },
    "Float": {
      "S": {
        "d": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).",
        "n": "Float",
        "p": "BestEffort",
        "s": null
      }
    },
    "ID": {
      "S": {
        "d": null,
        "n": "ID",
        "p": "BestEffort",
        "s": null
      }
    },
    "Int": {
      "S": {
        "d": "The `Int` scalar type represents non-fractional whole numeric values.",
        "n": "Int",
        "p": "BestEffort",
        "s": null
      }
    },
    "Mutation": {
      "O": {
        "C": [],
        "D": null,
        "I": false,
        "N": "Mutation",
        "c": {
          "m": 0,
          "p": true,
          "s": 0
        },
        "e": false,
        "f": {
          "productCreate": {
            "A": null,
            "D": "N",
            "E": [],
            "P": null,
            "R": null,
            "T": null,
            "_r": 1,
            "a": {
              "input": {
                "D": null,
                "V": null,
                "d": null,
                "i": false,
                "n": "input",
                "t": "ProductCreateInput!"
              }
            },
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": "Create a Product",
            "e": false,
            "n": "productCreate",
            "p": null,
            "r": null,
            "r_": {
              "id": "product_create_resolver",
              "type": {
                "d": {
                  "CreateNode": {
                    "input": {
                      "InputTypeName": "input"
                    },
                    "ty": "Product"
                  }
                }
              }
            },
            "t": "ProductCreatePayload"
          },
          "productDelete": {
            "A": null,
            "D": "N",
            "E": [],
            "P": null,
            "R": null,
            "T": null,
            "_r": 16,
            "a": {
              "by": {
                "D": null,
                "V": null,
                "d": null,
                "i": false,
                "n": "by",
                "t": "ProductByInput!"
              }
            },
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": "Delete a Product by ID or unique field",
            "e": false,
            "n": "productDelete",
            "p": null,
            "r": null,
            "r_": {
              "id": "product_delete_resolver",
              "type": {
                "d": {
                  "DeleteNode": {
                    "by": {
                      "InputTypeName": "by"
                    },
                    "ty": "Product"
                  }
                }
              }
            },
            "t": "ProductDeletePayload"
          },
          "productUpdate": {
            "A": null,
            "D": "N",
            "E": [],
            "P": null,
            "R": null,
            "T": null,
            "_r": 8,
            "a": {
              "by": {
                "D": null,
                "V": null,
                "d": null,
                "i": false,
                "n": "by",
                "t": "ProductByInput!"
              },
              "input": {
                "D": null,
                "V": null,
                "d": null,
                "i": false,
                "n": "input",
                "t": "ProductUpdateInput!"
              }
            },
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": "Update a Product",
            "e": false,
            "n": "productUpdate",
            "p": null,
            "r": null,
            "r_": {
              "id": "product_create_resolver",
              "type": {
                "d": {
                  "UpdateNode": {
                    "by": {
                      "InputTypeName": "by"
                    },
                    "input": {
                      "InputTypeName": "input"
                    },
                    "ty": "Product"
                  }
                }
              }
            },
            "t": "ProductUpdatePayload"
          }
        },
        "i_": false,
        "k": null,
        "r": "Mutation"
      }
    },
    "OrderByDirection": {
      "E": {
        "_e": {
          "ASC": {
            "D": "N",
            "d": null,
            "n": "ASC"
          },
          "DESC": {
            "D": "N",
            "d": null,
            "n": "DESC"
          }
        },
        "_r": "OrderByDirection",
        "a": "OrderByDirection",
        "e_": null
      }
    },
    "PageInfo": {
      "O": {
        "C": [],
        "D": null,
        "I": false,
        "N": "PageInfo",
        "c": {
          "m": 0,
          "p": true,
          "s": 0
        },
        "e": false,
        "f": {
          "endCursor": {
            "A": null,
            "D": "N",
            "E": [],
            "P": {
              "Apply": {
                "fun_fields": [
                  [
                    "id",
                    "CursorEncode"
                  ]
                ],
                "plan": {
                  "Last": {
                    "plan": {
                      "Projection": {
                        "fields": [
                          "id"
                        ],
                        "flattened": false
                      }
                    }
                  }
                }
              }
            },
            "R": null,
            "T": {
              "JSONSelect": {
                "property": "end_cursor"
              }
            },
            "_r": 4,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": null,
            "e": false,
            "n": "endCursor",
            "p": null,
            "r": null,
            "r_": {
              "id": null,
              "type": {
                "C": "P"
              }
            },
            "t": "String"
          },
          "hasNextPage": {
            "A": null,
            "D": "N",
            "E": [],
            "P": {
              "PaginationPage": "Next"
            },
            "R": null,
            "T": {
              "JSONSelect": {
                "property": "has_next_page"
              }
            },
            "_r": 4,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": null,
            "e": false,
            "n": "hasNextPage",
            "p": null,
            "r": null,
            "r_": {
              "id": null,
              "type": {
                "C": "P"
              }
            },
            "t": "Boolean!"
          },
          "hasPreviousPage": {
            "A": null,
            "D": "N",
            "E": [],
            "P": {
              "PaginationPage": "Previous"
            },
            "R": null,
            "T": {
              "JSONSelect": {
                "property": "has_previous_page"
              }
            },
            "_r": 4,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": null,
            "e": false,
            "n": "hasPreviousPage",
            "p": null,
            "r": null,
            "r_": {
              "id": null,
              "type": {
                "C": "P"
              }
            },
            "t": "Boolean!"
          },
          "startCursor": {
            "A": null,
            "D": "N",
            "E": [],
            "P": {
              "Apply": {
                "fun_fields": [
                  [
                    "id",
                    "CursorEncode"
                  ]
                ],
                "plan": {
                  "First": {
                    "plan": {
                      "Projection": {
                        "fields": [
                          "id"
                        ],
                        "flattened": false
                      }
                    }
                  }
                }
              }
            },
            "R": null,
            "T": {
              "JSONSelect": {
                "property": "start_cursor"
              }
            },
            "_r": 4,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": null,
            "e": false,
            "n": "startCursor",
            "p": null,
            "r": null,
            "r_": {
              "id": null,
              "type": {
                "C": "P"
              }
            },
            "t": "String"
          }
        },
        "i_": false,
        "k": null,
        "r": "PageInfo"
      }
    },
    "Product": {
      "O": {
        "C": [],
        "D": null,
        "I": false,
        "N": "Product",
        "c": {
          "m": 0,
          "p": true,
          "s": 0
        },
        "e": false,
        "f": {
          "createdAt": {
            "A": null,
            "D": "N",
            "E": [],
            "P": {
              "Projection": {
                "fields": [
                  "createdAt"
                ],
                "flattened": false
              }
            },
            "R": null,
            "T": {
              "DynamoSelect": {
                "property": "__created_at"
              }
            },
            "_r": null,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": "when the model was created",
            "e": false,
            "n": "createdAt",
            "p": null,
            "r": null,
            "r_": {
              "id": null,
              "type": {
                "C": {
                  "L": {
                    "K": "Product"
                  }
                }
              }
            },
            "t": "DateTime!"
          },
          "id": {
            "A": null,
            "D": "N",
            "E": [],
            "P": {
              "Projection": {
                "fields": [
                  "id"
                ],
                "flattened": false
              }
            },
            "R": null,
            "T": {
              "DynamoSelect": {
                "property": "__sk"
              }
            },
            "_r": null,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": "Unique identifier",
            "e": false,
            "n": "id",
            "p": null,
            "r": null,
            "r_": {
              "id": null,
              "type": {
                "C": {
                  "L": {
                    "K": "Product"
                  }
                }
              }
            },
            "t": "ID!"
          },
          "title": {
            "A": null,
            "D": "N",
            "E": [],
            "P": {
              "Projection": {
                "fields": [
                  "title"
                ],
                "flattened": false
              }
            },
            "R": null,
            "T": {
              "DynamoSelect": {
                "property": "title"
              }
            },
            "_r": null,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": null,
            "e": false,
            "n": "title",
            "p": null,
            "r": null,
            "r_": {
              "id": null,
              "type": {
                "C": {
                  "L": {
                    "K": "Product"
                  }
                }
              }
            },
            "t": "String"
          },
          "updatedAt": {
            "A": null,
            "D": "N",
            "E": [],
            "P": {
              "Projection": {
                "fields": [
                  "updatedAt"
                ],
                "flattened": false
              }
            },
            "R": null,
            "T": {
              "DynamoSelect": {
                "property": "__updated_at"
              }
            },
            "_r": null,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": "when the model was updated",
            "e": false,
            "n": "updatedAt",
            "p": null,
            "r": null,
            "r_": {
              "id": null,
              "type": {
                "C": {
                  "L": {
                    "K": "Product"
                  }
                }
              }
            },
            "t": "DateTime!"
          }
        },
        "i_": true,
        "k": null,
        "r": "Product"
      }
    },
    "ProductByInput": {
      "i": {
        "A": "ProductByInput",
        "_p": {
          "id": {
            "D": null,
            "V": null,
            "d": null,
            "i": false,
            "n": "id",
            "t": "ID"
          }
        },
        "o": true,
        "s_": null,
        "u": "ProductByInput"
      }
    },
    "ProductConnection": {
      "O": {
        "C": [],
        "D": null,
        "I": false,
        "N": "ProductConnection",
        "c": {
          "m": 0,
          "p": true,
          "s": 0
        },
        "e": false,
        "f": {
          "edges": {
            "A": null,
            "D": "N",
            "E": [],
            "P": null,
            "R": null,
            "T": null,
            "_r": 4,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": null,
            "e": false,
            "n": "edges",
            "p": null,
            "r": null,
            "r_": null,
            "t": "[ProductEdge]"
          },
          "pageInfo": {
            "A": null,
            "D": "N",
            "E": [],
            "P": null,
            "R": null,
            "T": null,
            "_r": 4,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": "Information to aid in pagination",
            "e": false,
            "n": "pageInfo",
            "p": null,
            "r": null,
            "r_": null,
            "t": "PageInfo!"
          }
        },
        "i_": false,
        "k": null,
        "r": "ProductConnection"
      }
    },
    "ProductCreateInput": {
      "i": {
        "A": "ProductCreateInput",
        "_p": {
          "title": {
            "D": null,
            "V": null,
            "d": null,
            "i": false,
            "n": "title",
            "t": "String"
          }
        },
        "o": false,
        "s_": "Input to create a Product",
        "u": "ProductCreateInput"
      }
    },
    "ProductCreatePayload": {
      "O": {
        "C": [],
        "D": null,
        "I": false,
        "N": "ProductCreatePayload",
        "c": {
          "m": 0,
          "p": true,
          "s": 0
        },
        "e": false,
        "f": {
          "product": {
            "A": null,
            "D": "N",
            "E": [],
            "P": null,
            "R": null,
            "T": null,
            "_r": 1,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": null,
            "e": false,
            "n": "product",
            "p": null,
            "r": null,
            "r_": {
              "id": "product_resolver",
              "type": {
                "D": {
                  "QueryPKSK": {
                    "pk": {
                      "LocalData": "id"
                    },
                    "schema": null,
                    "sk": {
                      "LocalData": "id"
                    }
                  }
                }
              }
            },
            "t": "Product"
          }
        },
        "i_": false,
        "k": null,
        "r": "ProductCreatePayload"
      }
    },
    "ProductDeletePayload": {
      "O": {
        "C": [],
        "D": null,
        "I": false,
        "N": "ProductDeletePayload",
        "c": {
          "m": 0,
          "p": true,
          "s": 0
        },
        "e": false,
        "f": {
          "deletedId": {
            "A": null,
            "D": "N",
            "E": [],
            "P": null,
            "R": null,
            "T": {
              "JSONSelect": {
                "property": "id"
              }
            },
            "_r": 16,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": null,
            "e": false,
            "n": "deletedId",
            "p": null,
            "r": null,
            "r_": null,
            "t": "ID!"
          }
        },
        "i_": false,
        "k": null,
        "r": "ProductDeletePayload"
      }
    },
    "ProductEdge": {
      "O": {
        "C": [],
        "D": null,
        "I": false,
        "N": "ProductEdge",
        "c": {
          "m": 0,
          "p": true,
          "s": 0
        },
        "e": false,
        "f": {
          "cursor": {
            "A": null,
            "D": "N",
            "E": [],
            "P": {
              "Apply": {
                "fun_fields": [
                  [
                    "id",
                    "CursorEncode"
                  ]
                ],
                "plan": {
                  "Projection": {
                    "fields": [
                      "id"
                    ],
                    "flattened": false
                  }
                }
              }
            },
            "R": null,
            "T": {
              "Pipeline": [
                {
                  "DynamoSelect": {
                    "property": "__sk"
                  }
                },
                "ConvertSkToCursor"
              ]
            },
            "_r": 4,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": null,
            "e": false,
            "n": "cursor",
            "p": null,
            "r": null,
            "r_": {
              "id": null,
              "type": {
                "C": {
                  "L": {
                    "K": "Product"
                  }
                }
              }
            },
            "t": "String!"
          },
          "node": {
            "A": null,
            "D": "N",
            "E": [],
            "P": null,
            "R": null,
            "T": null,
            "_r": 4,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": null,
            "e": false,
            "n": "node",
            "p": null,
            "r": null,
            "r_": null,
            "t": "Product!"
          }
        },
        "i_": false,
        "k": null,
        "r": "ProductEdge"
      }
    },
    "ProductOrderByInput": {
      "i": {
        "A": "ProductOrderByInput",
        "_p": {
          "createdAt": {
            "D": null,
            "V": null,
            "d": null,
            "i": false,
            "n": "createdAt",
            "t": "OrderByDirection"
          }
        },
        "o": true,
        "s_": null,
        "u": "ProductOrderByInput"
      }
    },
    "ProductUpdateInput": {
      "i": {
        "A": "ProductUpdateInput",
        "_p": {
          "title": {
            "D": null,
            "V": null,
            "d": null,
            "i": false,
            "n": "title",
            "t": "String"
          }
        },
        "o": false,
        "s_": "Input to update a Product",
        "u": "ProductUpdateInput"
      }
    },
    "ProductUpdatePayload": {
      "O": {
        "C": [],
        "D": null,
        "I": false,
        "N": "ProductUpdatePayload",
        "c": {
          "m": 0,
          "p": true,
          "s": 0
        },
        "e": false,
        "f": {
          "product": {
            "A": null,
            "D": "N",
            "E": [],
            "P": null,
            "R": null,
            "T": null,
            "_r": 8,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": null,
            "e": false,
            "n": "product",
            "p": null,
            "r": null,
            "r_": {
              "id": "product_resolver",
              "type": {
                "D": {
                  "QueryPKSK": {
                    "pk": {
                      "LocalData": "id"
                    },
                    "schema": null,
                    "sk": {
                      "LocalData": "id"
                    }
                  }
                }
              }
            },
            "t": "Product"
          }
        },
        "i_": false,
        "k": null,
        "r": "ProductUpdatePayload"
      }
    },
    "Query": {
      "O": {
        "C": [],
        "D": null,
        "I": false,
        "N": "Query",
        "c": {
          "m": 0,
          "p": true,
          "s": 0
        },
        "e": false,
        "f": {
          "__schema": {
            "A": null,
            "D": "N",
            "E": [],
            "P": null,
            "R": null,
            "T": null,
            "_r": null,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": "Access the current type schema of this server.",
            "e": false,
            "n": "__schema",
            "p": null,
            "r": null,
            "r_": null,
            "t": "__Schema!"
          },
          "product": {
            "A": null,
            "D": "N",
            "E": [],
            "P": null,
            "R": null,
            "T": null,
            "_r": 2,
            "a": {
              "by": {
                "D": null,
                "V": null,
                "d": "The field and value by which to query the Product",
                "i": false,
                "n": "by",
                "t": "ProductByInput!"
              }
            },
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": "Query a single Product by an ID or a unique field",
            "e": false,
            "n": "product",
            "p": null,
            "r": null,
            "r_": {
              "id": "product_resolver",
              "type": {
                "D": {
                  "QueryBy": {
                    "by": {
                      "InputTypeName": "by"
                    },
                    "schema": 0
                  }
                }
              }
            },
            "t": "Product"
          },
          "productCollection": {
            "A": null,
            "D": "N",
            "E": [],
            "P": {
              "Related": {
                "from": null,
                "relation_name": null,
                "to": 0,
                "ty": "Product"
              }
            },
            "R": {
              "birectional": false,
              "kind": "OneToMany",
              "name": "productCollection",
              "relation": [
                null,
                "Product"
              ]
            },
            "T": null,
            "_r": 4,
            "a": {
              "after": {
                "D": null,
                "V": null,
                "d": null,
                "i": false,
                "n": "after",
                "t": "String"
              },
              "before": {
                "D": null,
                "V": null,
                "d": null,
                "i": false,
                "n": "before",
                "t": "String"
              },
              "first": {
                "D": null,
                "V": null,
                "d": null,
                "i": false,
                "n": "first",
                "t": "Int"
              },
              "last": {
                "D": null,
                "V": null,
                "d": null,
                "i": false,
                "n": "last",
                "t": "Int"
              },
              "orderBy": {
                "D": null,
                "V": null,
                "d": null,
                "i": false,
                "n": "orderBy",
                "t": "ProductOrderByInput"
              }
            },
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": "Paginated query to fetch the whole list of `Product`.",
            "e": false,
            "n": "productCollection",
            "p": null,
            "r": null,
            "r_": {
              "id": "product_resolver",
              "type": {
                "D": {
                  "ListResultByTypePaginated": {
                    "after": {
                      "InputTypeName": "after"
                    },
                    "before": {
                      "InputTypeName": "before"
                    },
                    "first": {
                      "InputTypeName": "first"
                    },
                    "last": {
                      "InputTypeName": "last"
                    },
                    "nested": null,
                    "order_by": {
                      "InputTypeName": "orderBy"
                    },
                    "type": {
                      "DebugString": "Product"
                    }
                  }
                }
              }
            },
            "t": "ProductConnection"
          }
        },
        "i_": false,
        "k": null,
        "r": "Query"
      }
    },
    "String": {
      "S": {
        "d": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.",
        "n": "String",
        "p": "BestEffort",
        "s": null
      }
    },
    "__Directive": {
      "O": {
        "C": [],
        "D": "A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.",
        "I": false,
        "N": "__Directive",
        "c": {
          "m": 0,
          "p": true,
          "s": 0
        },
        "e": false,
        "f": {
          "args": {
            "A": null,
            "D": "N",
            "E": [],
            "P": null,
            "R": null,
            "T": null,
            "_r": null,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": null,
            "e": false,
            "n": "args",
            "p": null,
            "r": null,
            "r_": null,
            "t": "[__InputValue!]!"
          },
          "description": {
            "A": null,
            "D": "N",
            "E": [],
            "P": null,
            "R": null,
            "T": null,
            "_r": null,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": null,
            "e": false,
            "n": "description",
            "p": null,
            "r": null,
            "r_": null,
            "t": "String"
          },
          "isRepeatable": {
            "A": null,
            "D": "N",
            "E": [],
            "P": null,
            "R": null,
            "T": null,
            "_r": null,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": null,
            "e": false,
            "n": "isRepeatable",
            "p": null,
            "r": null,
            "r_": null,
            "t": "Boolean!"
          },
          "locations": {
            "A": null,
            "D": "N",
            "E": [],
            "P": null,
            "R": null,
            "T": null,
            "_r": null,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": null,
            "e": false,
            "n": "locations",
            "p": null,
            "r": null,
            "r_": null,
            "t": "[__DirectiveLocation!]!"
          },
          "name": {
            "A": null,
            "D": "N",
            "E": [],
            "P": null,
            "R": null,
            "T": null,
            "_r": null,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": null,
            "e": false,
            "n": "name",
            "p": null,
            "r": null,
            "r_": null,
            "t": "String!"
          }
        },
        "i_": false,
        "k": null,
        "r": "dynaql::model::directive::__Directive"
      }
    },
    "__DirectiveLocation": {
      "E": {
        "_e": {
          "ARGUMENT_DEFINITION": {
            "D": "N",
            "d": "Location adjacent to an argument definition.",
            "n": "ARGUMENT_DEFINITION"
          },
          "ENUM": {
            "D": "N",
            "d": "Location adjacent to an enum definition.",
            "n": "ENUM"
          },
          "ENUM_VALUE": {
            "D": "N",
            "d": "Location adjacent to an enum value definition.",
            "n": "ENUM_VALUE"
          },
          "FIELD": {
            "D": "N",
            "d": "Location adjacent to a field.",
            "n": "FIELD"
          },
          "FIELD_DEFINITION": {
            "D": "N",
            "d": "Location adjacent to a field definition.",
            "n": "FIELD_DEFINITION"
          },
          "FRAGMENT_DEFINITION": {
            "D": "N",
            "d": "Location adjacent to a fragment definition.",
            "n": "FRAGMENT_DEFINITION"
          },
          "FRAGMENT_SPREAD": {
            "D": "N",
            "d": "Location adjacent to a fragment spread.",
            "n": "FRAGMENT_SPREAD"
          },
          "INLINE_FRAGMENT": {
            "D": "N",
            "d": "Location adjacent to an inline fragment.",
            "n": "INLINE_FRAGMENT"
          },
          "INPUT_FIELD_DEFINITION": {
            "D": "N",
            "d": "Location adjacent to an input object field definition.",
            "n": "INPUT_FIELD_DEFINITION"
          },
          "INPUT_OBJECT": {
            "D": "N",
            "d": "Location adjacent to an input object type definition.",
            "n": "INPUT_OBJECT"
          },
          "INTERFACE": {
            "D": "N",
            "d": "Location adjacent to an interface definition.",
            "n": "INTERFACE"
          },
          "MUTATION": {
            "D": "N",
            "d": "Location adjacent to a mutation operation.",
            "n": "MUTATION"
          },
          "OBJECT": {
            "D": "N",
            "d": "Location adjacent to an object type definition.",
            "n": "OBJECT"
          },
          "QUERY": {
            "D": "N",
            "d": "Location adjacent to a query operation.",
            "n": "QUERY"
          },
          "SCALAR": {
            "D": "N",
            "d": "Location adjacent to a scalar definition.",
            "n": "SCALAR"
          },
          "SCHEMA": {
            "D": "N",
            "d": "Location adjacent to a schema definition.",
            "n": "SCHEMA"
          },
          "SUBSCRIPTION": {
            "D": "N",
            "d": "Location adjacent to a subscription operation.",
            "n": "SUBSCRIPTION"
          },
          "UNION": {
            "D": "N",
            "d": "Location adjacent to a union definition.",
            "n": "UNION"
          },
          "VARIABLE_DEFINITION": {
            "D": "N",
            "d": "Location adjacent to a variable definition.",
            "n": "VARIABLE_DEFINITION"
          }
        },
        "_r": "dynaql::model::directive::__DirectiveLocation",
        "a": "__DirectiveLocation",
        "e_": "A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies."
      }
    },
    "__EnumValue": {
      "O": {
        "C": [],
        "D": "One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.",
        "I": false,
        "N": "__EnumValue",
        "c": {
          "m": 0,
          "p": true,
          "s": 0
        },
        "e": false,
        "f": {
          "deprecationReason": {
            "A": null,
            "D": "N",
            "E": [],
            "P": null,
            "R": null,
            "T": null,
            "_r": null,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": null,
            "e": false,
            "n": "deprecationReason",
            "p": null,
            "r": null,
            "r_": null,
            "t": "String"
          },
          "description": {
            "A": null,
            "D": "N",
            "E": [],
            "P": null,
            "R": null,
            "T": null,
            "_r": null,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": null,
            "e": false,
            "n": "description",
            "p": null,
            "r": null,
            "r_": null,
            "t": "String"
          },
          "isDeprecated": {
            "A": null,
            "D": "N",
            "E": [],
            "P": null,
            "R": null,
            "T": null,
            "_r": null,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": null,
            "e": false,
            "n": "isDeprecated",
            "p": null,
            "r": null,
            "r_": null,
            "t": "Boolean!"
          },
          "name": {
            "A": null,
            "D": "N",
            "E": [],
            "P": null,
            "R": null,
            "T": null,
            "_r": null,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": null,
            "e": false,
            "n": "name",
            "p": null,
            "r": null,
            "r_": null,
            "t": "String!"
          }
        },
        "i_": false,
        "k": null,
        "r": "dynaql::model::enum_value::__EnumValue"
      }
    },
    "__Field": {
      "O": {
        "C": [],
        "D": "Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.",
        "I": false,
        "N": "__Field",
        "c": {
          "m": 0,
          "p": true,
          "s": 0
        },
        "e": false,
        "f": {
          "args": {
            "A": null,
            "D": "N",
            "E": [],
            "P": null,
            "R": null,
            "T": null,
            "_r": null,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": null,
            "e": false,
            "n": "args",
            "p": null,
            "r": null,
            "r_": null,
            "t": "[__InputValue!]!"
          },
          "deprecationReason": {
            "A": null,
            "D": "N",
            "E": [],
            "P": null,
            "R": null,
            "T": null,
            "_r": null,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": null,
            "e": false,
            "n": "deprecationReason",
            "p": null,
            "r": null,
            "r_": null,
            "t": "String"
          },
          "description": {
            "A": null,
            "D": "N",
            "E": [],
            "P": null,
            "R": null,
            "T": null,
            "_r": null,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": null,
            "e": false,
            "n": "description",
            "p": null,
            "r": null,
            "r_": null,
            "t": "String"
          },
          "isDeprecated": {
            "A": null,
            "D": "N",
            "E": [],
            "P": null,
            "R": null,
            "T": null,
            "_r": null,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": null,
            "e": false,
            "n": "isDeprecated",
            "p": null,
            "r": null,
            "r_": null,
            "t": "Boolean!"
          },
          "name": {
            "A": null,
            "D": "N",
            "E": [],
            "P": null,
            "R": null,
            "T": null,
            "_r": null,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": null,
            "e": false,
            "n": "name",
            "p": null,
            "r": null,
            "r_": null,
            "t": "String!"
          },
          "type": {
            "A": null,
            "D": "N",
            "E": [],
            "P": null,
            "R": null,
            "T": null,
            "_r": null,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": null,
            "e": false,
            "n": "type",
            "p": null,
            "r": null,
            "r_": null,
            "t": "__Type!"
          }
        },
        "i_": false,
        "k": null,
        "r": "dynaql::model::field::__Field"
      }
    },
    "__InputValue": {
      "O": {
        "C": [],
        "D": "Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.",
        "I": false,
        "N": "__InputValue",
        "c": {
          "m": 0,
          "p": true,
          "s": 0
        },
        "e": false,
        "f": {
          "defaultValue": {
            "A": null,
            "D": "N",
            "E": [],
            "P": null,
            "R": null,
            "T": null,
            "_r": null,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": null,
            "e": false,
            "n": "defaultValue",
            "p": null,
            "r": null,
            "r_": null,
            "t": "String"
          },
          "description": {
            "A": null,
            "D": "N",
            "E": [],
            "P": null,
            "R": null,
            "T": null,
            "_r": null,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": null,
            "e": false,
            "n": "description",
            "p": null,
            "r": null,
            "r_": null,
            "t": "String"
          },
          "name": {
            "A": null,
            "D": "N",
            "E": [],
            "P": null,
            "R": null,
            "T": null,
            "_r": null,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": null,
            "e": false,
            "n": "name",
            "p": null,
            "r": null,
            "r_": null,
            "t": "String!"
          },
          "type": {
            "A": null,
            "D": "N",
            "E": [],
            "P": null,
            "R": null,
            "T": null,
            "_r": null,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": null,
            "e": false,
            "n": "type",
            "p": null,
            "r": null,
            "r_": null,
            "t": "__Type!"
          }
        },
        "i_": false,
        "k": null,
        "r": "dynaql::model::input_value::__InputValue"
      }
    },
    "__Schema": {
      "O": {
        "C": [],
        "D": "A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.",
        "I": false,
        "N": "__Schema",
        "c": {
          "m": 0,
          "p": true,
          "s": 0
        },
        "e": false,
        "f": {
          "directives": {
            "A": null,
            "D": "N",
            "E": [],
            "P": null,
            "R": null,
            "T": null,
            "_r": null,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": "A list of all directives supported by this server.",
            "e": false,
            "n": "directives",
            "p": null,
            "r": null,
            "r_": null,
            "t": "[__Directive!]!"
          },
          "mutationType": {
            "A": null,
            "D": "N",
            "E": [],
            "P": null,
            "R": null,
            "T": null,
            "_r": null,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": "If this server supports mutation, the type that mutation operations will be rooted at.",
            "e": false,
            "n": "mutationType",
            "p": null,
            "r": null,
            "r_": null,
            "t": "__Type"
          },
          "queryType": {
            "A": null,
            "D": "N",
            "E": [],
            "P": null,
            "R": null,
            "T": null,
            "_r": null,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": "The type that query operations will be rooted at.",
            "e": false,
            "n": "queryType",
            "p": null,
            "r": null,
            "r_": null,
            "t": "__Type!"
          },
          "subscriptionType": {
            "A": null,
            "D": "N",
            "E": [],
            "P": null,
            "R": null,
            "T": null,
            "_r": null,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": "If this server support subscription, the type that subscription operations will be rooted at.",
            "e": false,
            "n": "subscriptionType",
            "p": null,
            "r": null,
            "r_": null,
            "t": "__Type"
          },
          "types": {
            "A": null,
            "D": "N",
            "E": [],
            "P": null,
            "R": null,
            "T": null,
            "_r": null,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": "A list of all types supported by this server.",
            "e": false,
            "n": "types",
            "p": null,
            "r": null,
            "r_": null,
            "t": "[__Type!]!"
          }
        },
        "i_": false,
        "k": null,
        "r": "dynaql::model::schema::__Schema"
      }
    },
    "__Type": {
      "O": {
        "C": [],
        "D": "The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name and description, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",
        "I": false,
        "N": "__Type",
        "c": {
          "m": 0,
          "p": true,
          "s": 0
        },
        "e": false,
        "f": {
          "description": {
            "A": null,
            "D": "N",
            "E": [],
            "P": null,
            "R": null,
            "T": null,
            "_r": null,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": null,
            "e": false,
            "n": "description",
            "p": null,
            "r": null,
            "r_": null,
            "t": "String"
          },
          "enumValues": {
            "A": null,
            "D": "N",
            "E": [],
            "P": null,
            "R": null,
            "T": null,
            "_r": null,
            "a": {
              "includeDeprecated": {
                "D": false,
                "V": null,
                "d": null,
                "i": false,
                "n": "includeDeprecated",
                "t": "Boolean!"
              }
            },
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": null,
            "e": false,
            "n": "enumValues",
            "p": null,
            "r": null,
            "r_": null,
            "t": "[__EnumValue!]"
          },
          "fields": {
            "A": null,
            "D": "N",
            "E": [],
            "P": null,
            "R": null,
            "T": null,
            "_r": null,
            "a": {
              "includeDeprecated": {
                "D": false,
                "V": null,
                "d": null,
                "i": false,
                "n": "includeDeprecated",
                "t": "Boolean!"
              }
            },
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": null,
            "e": false,
            "n": "fields",
            "p": null,
            "r": null,
            "r_": null,
            "t": "[__Field!]"
          },
          "inputFields": {
            "A": null,
            "D": "N",
            "E": [],
            "P": null,
            "R": null,
            "T": null,
            "_r": null,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": null,
            "e": false,
            "n": "inputFields",
            "p": null,
            "r": null,
            "r_": null,
            "t": "[__InputValue!]"
          },
          "interfaces": {
            "A": null,
            "D": "N",
            "E": [],
            "P": null,
            "R": null,
            "T": null,
            "_r": null,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": null,
            "e": false,
            "n": "interfaces",
            "p": null,
            "r": null,
            "r_": null,
            "t": "[__Type!]"
          },
          "isOneOf": {
            "A": null,
            "D": "N",
            "E": [],
            "P": null,
            "R": null,
            "T": null,
            "_r": null,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": null,
            "e": false,
            "n": "isOneOf",
            "p": null,
            "r": null,
            "r_": null,
            "t": "Boolean"
          },
          "kind": {
            "A": null,
            "D": "N",
            "E": [],
            "P": null,
            "R": null,
            "T": null,
            "_r": null,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": null,
            "e": false,
            "n": "kind",
            "p": null,
            "r": null,
            "r_": null,
            "t": "__TypeKind!"
          },
          "name": {
            "A": null,
            "D": "N",
            "E": [],
            "P": null,
            "R": null,
            "T": null,
            "_r": null,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": null,
            "e": false,
            "n": "name",
            "p": null,
            "r": null,
            "r_": null,
            "t": "String"
          },
          "ofType": {
            "A": null,
            "D": "N",
            "E": [],
            "P": null,
            "R": null,
            "T": null,
            "_r": null,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": null,
            "e": false,
            "n": "ofType",
            "p": null,
            "r": null,
            "r_": null,
            "t": "__Type"
          },
          "possibleTypes": {
            "A": null,
            "D": "N",
            "E": [],
            "P": null,
            "R": null,
            "T": null,
            "_r": null,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": null,
            "e": false,
            "n": "possibleTypes",
            "p": null,
            "r": null,
            "r_": null,
            "t": "[__Type!]"
          },
          "specifiedByURL": {
            "A": null,
            "D": "N",
            "E": [],
            "P": null,
            "R": null,
            "T": null,
            "_r": null,
            "a": {},
            "c": {
              "m": 0,
              "p": true,
              "s": 0
            },
            "d": null,
            "e": false,
            "n": "specifiedByURL",
            "p": null,
            "r": null,
            "r_": null,
            "t": "String"
          }
        },
        "i_": false,
        "k": null,
        "r": "dynaql::model::type::__Type"
      }
    },
    "__TypeKind": {
      "E": {
        "_e": {
          "ENUM": {
            "D": "N",
            "d": "Indicates this type is an enum. `enumValues` is a valid field.",
            "n": "ENUM"
          },
          "INPUT_OBJECT": {
            "D": "N",
            "d": "Indicates this type is an input object. `inputFields` is a valid field.",
            "n": "INPUT_OBJECT"
          },
          "INTERFACE": {
            "D": "N",
            "d": "Indicates this type is an interface. `fields` and `possibleTypes` are valid fields.",
            "n": "INTERFACE"
          },
          "LIST": {
            "D": "N",
            "d": "Indicates this type is a list. `ofType` is a valid field.",
            "n": "LIST"
          },
          "NON_NULL": {
            "D": "N",
            "d": "Indicates this type is a non-null. `ofType` is a valid field.",
            "n": "NON_NULL"
          },
          "OBJECT": {
            "D": "N",
            "d": "Indicates this type is an object. `fields` and `interfaces` are valid fields.",
            "n": "OBJECT"
          },
          "SCALAR": {
            "D": "N",
            "d": "Indicates this type is a scalar.",
            "n": "SCALAR"
          },
          "UNION": {
            "D": "N",
            "d": "Indicates this type is a union. `possibleTypes` is a valid field.",
            "n": "UNION"
          }
        },
        "_r": "dynaql::model::kind::__TypeKind",
        "a": "__TypeKind",
        "e_": "An enum describing what kind of type a given `__Type` is."
      }
    }
  }
}
