---
source: common/dynaql/src/registry/introspection.rs
expression: "Registry::from(schema)"
---
{
  "types": {
    "Boolean": {
      "S": {
        "n": "Boolean",
        "d": "The `Boolean` scalar type represents `true` or `false`.",
        "s": null,
        "p": "PassThrough"
      }
    },
    "Continent": {
      "O": {
        "N": "Continent",
        "D": null,
        "f": {
          "code": {
            "n": "code",
            "d": null,
            "a": {},
            "t": "ID!",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "countries": {
            "n": "countries",
            "d": null,
            "a": {},
            "t": "[Country!]!",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "name": {
            "n": "name",
            "d": null,
            "a": {},
            "t": "String!",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          }
        },
        "c": {
          "p": true,
          "m": 0,
          "s": 0
        },
        "e": false,
        "k": null,
        "I": false,
        "i_": false,
        "r": "Continent",
        "C": []
      }
    },
    "ContinentFilterInput": {
      "i": {
        "A": "ContinentFilterInput",
        "s_": null,
        "_p": {
          "code": {
            "n": "code",
            "d": null,
            "t": "StringQueryOperatorInput",
            "D": null,
            "V": null,
            "i": false
          }
        },
        "u": "ContinentFilterInput",
        "o": false
      }
    },
    "Country": {
      "O": {
        "N": "Country",
        "D": null,
        "f": {
          "awsRegion": {
            "n": "awsRegion",
            "d": null,
            "a": {},
            "t": "String!",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "capital": {
            "n": "capital",
            "d": null,
            "a": {},
            "t": "String",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "code": {
            "n": "code",
            "d": null,
            "a": {},
            "t": "ID!",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "continent": {
            "n": "continent",
            "d": null,
            "a": {},
            "t": "Continent!",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "currencies": {
            "n": "currencies",
            "d": null,
            "a": {},
            "t": "[String!]!",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "currency": {
            "n": "currency",
            "d": null,
            "a": {},
            "t": "String",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "emoji": {
            "n": "emoji",
            "d": null,
            "a": {},
            "t": "String!",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "emojiU": {
            "n": "emojiU",
            "d": null,
            "a": {},
            "t": "String!",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "languages": {
            "n": "languages",
            "d": null,
            "a": {},
            "t": "[Language!]!",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "name": {
            "n": "name",
            "d": null,
            "a": {
              "lang": {
                "n": "lang",
                "d": null,
                "t": "String",
                "D": null,
                "V": null,
                "i": false
              }
            },
            "t": "String!",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "native": {
            "n": "native",
            "d": null,
            "a": {},
            "t": "String!",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "phone": {
            "n": "phone",
            "d": null,
            "a": {},
            "t": "String!",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "phones": {
            "n": "phones",
            "d": null,
            "a": {},
            "t": "[String!]!",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "states": {
            "n": "states",
            "d": null,
            "a": {},
            "t": "[State!]!",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "subdivisions": {
            "n": "subdivisions",
            "d": null,
            "a": {},
            "t": "[Subdivision!]!",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          }
        },
        "c": {
          "p": true,
          "m": 0,
          "s": 0
        },
        "e": false,
        "k": null,
        "I": false,
        "i_": false,
        "r": "Country",
        "C": []
      }
    },
    "CountryFilterInput": {
      "i": {
        "A": "CountryFilterInput",
        "s_": null,
        "_p": {
          "code": {
            "n": "code",
            "d": null,
            "t": "StringQueryOperatorInput",
            "D": null,
            "V": null,
            "i": false
          },
          "continent": {
            "n": "continent",
            "d": null,
            "t": "StringQueryOperatorInput",
            "D": null,
            "V": null,
            "i": false
          },
          "currency": {
            "n": "currency",
            "d": null,
            "t": "StringQueryOperatorInput",
            "D": null,
            "V": null,
            "i": false
          }
        },
        "u": "CountryFilterInput",
        "o": false
      }
    },
    "Float": {
      "S": {
        "n": "Float",
        "d": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).",
        "s": null,
        "p": "PassThrough"
      }
    },
    "ID": {
      "S": {
        "n": "ID",
        "d": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID.",
        "s": null,
        "p": "PassThrough"
      }
    },
    "Int": {
      "S": {
        "n": "Int",
        "d": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
        "s": null,
        "p": "PassThrough"
      }
    },
    "Language": {
      "O": {
        "N": "Language",
        "D": null,
        "f": {
          "code": {
            "n": "code",
            "d": null,
            "a": {},
            "t": "ID!",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "name": {
            "n": "name",
            "d": null,
            "a": {},
            "t": "String!",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "native": {
            "n": "native",
            "d": null,
            "a": {},
            "t": "String!",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "rtl": {
            "n": "rtl",
            "d": null,
            "a": {},
            "t": "Boolean!",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          }
        },
        "c": {
          "p": true,
          "m": 0,
          "s": 0
        },
        "e": false,
        "k": null,
        "I": false,
        "i_": false,
        "r": "Language",
        "C": []
      }
    },
    "LanguageFilterInput": {
      "i": {
        "A": "LanguageFilterInput",
        "s_": null,
        "_p": {
          "code": {
            "n": "code",
            "d": null,
            "t": "StringQueryOperatorInput",
            "D": null,
            "V": null,
            "i": false
          }
        },
        "u": "LanguageFilterInput",
        "o": false
      }
    },
    "Query": {
      "O": {
        "N": "Query",
        "D": null,
        "f": {
          "continent": {
            "n": "continent",
            "d": null,
            "a": {
              "code": {
                "n": "code",
                "d": null,
                "t": "ID!",
                "D": null,
                "V": null,
                "i": false
              }
            },
            "t": "Continent",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "continents": {
            "n": "continents",
            "d": null,
            "a": {
              "filter": {
                "n": "filter",
                "d": null,
                "t": "ContinentFilterInput",
                "D": "{}",
                "V": null,
                "i": false
              }
            },
            "t": "[Continent!]!",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "countries": {
            "n": "countries",
            "d": null,
            "a": {
              "filter": {
                "n": "filter",
                "d": null,
                "t": "CountryFilterInput",
                "D": "{}",
                "V": null,
                "i": false
              }
            },
            "t": "[Country!]!",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "country": {
            "n": "country",
            "d": null,
            "a": {
              "code": {
                "n": "code",
                "d": null,
                "t": "ID!",
                "D": null,
                "V": null,
                "i": false
              }
            },
            "t": "Country",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "language": {
            "n": "language",
            "d": null,
            "a": {
              "code": {
                "n": "code",
                "d": null,
                "t": "ID!",
                "D": null,
                "V": null,
                "i": false
              }
            },
            "t": "Language",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "languages": {
            "n": "languages",
            "d": null,
            "a": {
              "filter": {
                "n": "filter",
                "d": null,
                "t": "LanguageFilterInput",
                "D": "{}",
                "V": null,
                "i": false
              }
            },
            "t": "[Language!]!",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          }
        },
        "c": {
          "p": true,
          "m": 0,
          "s": 0
        },
        "e": false,
        "k": null,
        "I": false,
        "i_": false,
        "r": "Query",
        "C": []
      }
    },
    "State": {
      "O": {
        "N": "State",
        "D": null,
        "f": {
          "code": {
            "n": "code",
            "d": null,
            "a": {},
            "t": "String",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "country": {
            "n": "country",
            "d": null,
            "a": {},
            "t": "Country!",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "name": {
            "n": "name",
            "d": null,
            "a": {},
            "t": "String!",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          }
        },
        "c": {
          "p": true,
          "m": 0,
          "s": 0
        },
        "e": false,
        "k": null,
        "I": false,
        "i_": false,
        "r": "State",
        "C": []
      }
    },
    "String": {
      "S": {
        "n": "String",
        "d": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.",
        "s": null,
        "p": "PassThrough"
      }
    },
    "StringQueryOperatorInput": {
      "i": {
        "A": "StringQueryOperatorInput",
        "s_": null,
        "_p": {
          "eq": {
            "n": "eq",
            "d": null,
            "t": "String",
            "D": null,
            "V": null,
            "i": false
          },
          "in": {
            "n": "in",
            "d": null,
            "t": "[String!]",
            "D": null,
            "V": null,
            "i": false
          },
          "ne": {
            "n": "ne",
            "d": null,
            "t": "String",
            "D": null,
            "V": null,
            "i": false
          },
          "nin": {
            "n": "nin",
            "d": null,
            "t": "[String!]",
            "D": null,
            "V": null,
            "i": false
          },
          "regex": {
            "n": "regex",
            "d": null,
            "t": "String",
            "D": null,
            "V": null,
            "i": false
          }
        },
        "u": "StringQueryOperatorInput",
        "o": false
      }
    },
    "Subdivision": {
      "O": {
        "N": "Subdivision",
        "D": null,
        "f": {
          "code": {
            "n": "code",
            "d": null,
            "a": {},
            "t": "ID!",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "emoji": {
            "n": "emoji",
            "d": null,
            "a": {},
            "t": "String",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "name": {
            "n": "name",
            "d": null,
            "a": {},
            "t": "String!",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          }
        },
        "c": {
          "p": true,
          "m": 0,
          "s": 0
        },
        "e": false,
        "k": null,
        "I": false,
        "i_": false,
        "r": "Subdivision",
        "C": []
      }
    },
    "__Directive": {
      "O": {
        "N": "__Directive",
        "D": "A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.",
        "f": {
          "args": {
            "n": "args",
            "d": null,
            "a": {
              "includeDeprecated": {
                "n": "includeDeprecated",
                "d": null,
                "t": "Boolean",
                "D": "false",
                "V": null,
                "i": false
              }
            },
            "t": "[__InputValue!]!",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "description": {
            "n": "description",
            "d": null,
            "a": {},
            "t": "String",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "isRepeatable": {
            "n": "isRepeatable",
            "d": null,
            "a": {},
            "t": "Boolean!",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "locations": {
            "n": "locations",
            "d": null,
            "a": {},
            "t": "[__DirectiveLocation!]!",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "name": {
            "n": "name",
            "d": null,
            "a": {},
            "t": "String!",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          }
        },
        "c": {
          "p": true,
          "m": 0,
          "s": 0
        },
        "e": false,
        "k": null,
        "I": false,
        "i_": false,
        "r": "__Directive",
        "C": []
      }
    },
    "__DirectiveLocation": {
      "E": {
        "a": "__DirectiveLocation",
        "e_": "A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.",
        "_e": {
          "ARGUMENT_DEFINITION": {
            "n": "ARGUMENT_DEFINITION",
            "d": "Location adjacent to an argument definition.",
            "D": "N"
          },
          "ENUM": {
            "n": "ENUM",
            "d": "Location adjacent to an enum definition.",
            "D": "N"
          },
          "ENUM_VALUE": {
            "n": "ENUM_VALUE",
            "d": "Location adjacent to an enum value definition.",
            "D": "N"
          },
          "FIELD": {
            "n": "FIELD",
            "d": "Location adjacent to a field.",
            "D": "N"
          },
          "FIELD_DEFINITION": {
            "n": "FIELD_DEFINITION",
            "d": "Location adjacent to a field definition.",
            "D": "N"
          },
          "FRAGMENT_DEFINITION": {
            "n": "FRAGMENT_DEFINITION",
            "d": "Location adjacent to a fragment definition.",
            "D": "N"
          },
          "FRAGMENT_SPREAD": {
            "n": "FRAGMENT_SPREAD",
            "d": "Location adjacent to a fragment spread.",
            "D": "N"
          },
          "INLINE_FRAGMENT": {
            "n": "INLINE_FRAGMENT",
            "d": "Location adjacent to an inline fragment.",
            "D": "N"
          },
          "INPUT_FIELD_DEFINITION": {
            "n": "INPUT_FIELD_DEFINITION",
            "d": "Location adjacent to an input object field definition.",
            "D": "N"
          },
          "INPUT_OBJECT": {
            "n": "INPUT_OBJECT",
            "d": "Location adjacent to an input object type definition.",
            "D": "N"
          },
          "INTERFACE": {
            "n": "INTERFACE",
            "d": "Location adjacent to an interface definition.",
            "D": "N"
          },
          "MUTATION": {
            "n": "MUTATION",
            "d": "Location adjacent to a mutation operation.",
            "D": "N"
          },
          "OBJECT": {
            "n": "OBJECT",
            "d": "Location adjacent to an object type definition.",
            "D": "N"
          },
          "QUERY": {
            "n": "QUERY",
            "d": "Location adjacent to a query operation.",
            "D": "N"
          },
          "SCALAR": {
            "n": "SCALAR",
            "d": "Location adjacent to a scalar definition.",
            "D": "N"
          },
          "SCHEMA": {
            "n": "SCHEMA",
            "d": "Location adjacent to a schema definition.",
            "D": "N"
          },
          "SUBSCRIPTION": {
            "n": "SUBSCRIPTION",
            "d": "Location adjacent to a subscription operation.",
            "D": "N"
          },
          "UNION": {
            "n": "UNION",
            "d": "Location adjacent to a union definition.",
            "D": "N"
          },
          "VARIABLE_DEFINITION": {
            "n": "VARIABLE_DEFINITION",
            "d": "Location adjacent to a variable definition.",
            "D": "N"
          }
        },
        "_r": "__DirectiveLocation"
      }
    },
    "__EnumValue": {
      "O": {
        "N": "__EnumValue",
        "D": "One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.",
        "f": {
          "deprecationReason": {
            "n": "deprecationReason",
            "d": null,
            "a": {},
            "t": "String",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "description": {
            "n": "description",
            "d": null,
            "a": {},
            "t": "String",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "isDeprecated": {
            "n": "isDeprecated",
            "d": null,
            "a": {},
            "t": "Boolean!",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "name": {
            "n": "name",
            "d": null,
            "a": {},
            "t": "String!",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          }
        },
        "c": {
          "p": true,
          "m": 0,
          "s": 0
        },
        "e": false,
        "k": null,
        "I": false,
        "i_": false,
        "r": "__EnumValue",
        "C": []
      }
    },
    "__Field": {
      "O": {
        "N": "__Field",
        "D": "Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.",
        "f": {
          "args": {
            "n": "args",
            "d": null,
            "a": {
              "includeDeprecated": {
                "n": "includeDeprecated",
                "d": null,
                "t": "Boolean",
                "D": "false",
                "V": null,
                "i": false
              }
            },
            "t": "[__InputValue!]!",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "deprecationReason": {
            "n": "deprecationReason",
            "d": null,
            "a": {},
            "t": "String",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "description": {
            "n": "description",
            "d": null,
            "a": {},
            "t": "String",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "isDeprecated": {
            "n": "isDeprecated",
            "d": null,
            "a": {},
            "t": "Boolean!",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "name": {
            "n": "name",
            "d": null,
            "a": {},
            "t": "String!",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "type": {
            "n": "type",
            "d": null,
            "a": {},
            "t": "__Type!",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          }
        },
        "c": {
          "p": true,
          "m": 0,
          "s": 0
        },
        "e": false,
        "k": null,
        "I": false,
        "i_": false,
        "r": "__Field",
        "C": []
      }
    },
    "__InputValue": {
      "O": {
        "N": "__InputValue",
        "D": "Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.",
        "f": {
          "defaultValue": {
            "n": "defaultValue",
            "d": "A GraphQL-formatted string representing the default value for this input value.",
            "a": {},
            "t": "String",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "deprecationReason": {
            "n": "deprecationReason",
            "d": null,
            "a": {},
            "t": "String",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "description": {
            "n": "description",
            "d": null,
            "a": {},
            "t": "String",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "isDeprecated": {
            "n": "isDeprecated",
            "d": null,
            "a": {},
            "t": "Boolean!",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "name": {
            "n": "name",
            "d": null,
            "a": {},
            "t": "String!",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "type": {
            "n": "type",
            "d": null,
            "a": {},
            "t": "__Type!",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          }
        },
        "c": {
          "p": true,
          "m": 0,
          "s": 0
        },
        "e": false,
        "k": null,
        "I": false,
        "i_": false,
        "r": "__InputValue",
        "C": []
      }
    },
    "__Schema": {
      "O": {
        "N": "__Schema",
        "D": "A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.",
        "f": {
          "description": {
            "n": "description",
            "d": null,
            "a": {},
            "t": "String",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "directives": {
            "n": "directives",
            "d": "A list of all directives supported by this server.",
            "a": {},
            "t": "[__Directive!]!",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "mutationType": {
            "n": "mutationType",
            "d": "If this server supports mutation, the type that mutation operations will be rooted at.",
            "a": {},
            "t": "__Type",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "queryType": {
            "n": "queryType",
            "d": "The type that query operations will be rooted at.",
            "a": {},
            "t": "__Type!",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "subscriptionType": {
            "n": "subscriptionType",
            "d": "If this server support subscription, the type that subscription operations will be rooted at.",
            "a": {},
            "t": "__Type",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "types": {
            "n": "types",
            "d": "A list of all types supported by this server.",
            "a": {},
            "t": "[__Type!]!",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          }
        },
        "c": {
          "p": true,
          "m": 0,
          "s": 0
        },
        "e": false,
        "k": null,
        "I": false,
        "i_": false,
        "r": "__Schema",
        "C": []
      }
    },
    "__Type": {
      "O": {
        "N": "__Type",
        "D": "The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByURL`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",
        "f": {
          "description": {
            "n": "description",
            "d": null,
            "a": {},
            "t": "String",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "enumValues": {
            "n": "enumValues",
            "d": null,
            "a": {
              "includeDeprecated": {
                "n": "includeDeprecated",
                "d": null,
                "t": "Boolean",
                "D": "false",
                "V": null,
                "i": false
              }
            },
            "t": "[__EnumValue!]",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "fields": {
            "n": "fields",
            "d": null,
            "a": {
              "includeDeprecated": {
                "n": "includeDeprecated",
                "d": null,
                "t": "Boolean",
                "D": "false",
                "V": null,
                "i": false
              }
            },
            "t": "[__Field!]",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "inputFields": {
            "n": "inputFields",
            "d": null,
            "a": {
              "includeDeprecated": {
                "n": "includeDeprecated",
                "d": null,
                "t": "Boolean",
                "D": "false",
                "V": null,
                "i": false
              }
            },
            "t": "[__InputValue!]",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "interfaces": {
            "n": "interfaces",
            "d": null,
            "a": {},
            "t": "[__Type!]",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "kind": {
            "n": "kind",
            "d": null,
            "a": {},
            "t": "__TypeKind!",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "name": {
            "n": "name",
            "d": null,
            "a": {},
            "t": "String",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "ofType": {
            "n": "ofType",
            "d": null,
            "a": {},
            "t": "__Type",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "possibleTypes": {
            "n": "possibleTypes",
            "d": null,
            "a": {},
            "t": "[__Type!]",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          },
          "specifiedByURL": {
            "n": "specifiedByURL",
            "d": null,
            "a": {},
            "t": "String",
            "D": "N",
            "c": {
              "p": true,
              "m": 0,
              "s": 0
            },
            "e": false,
            "r": null,
            "p": null,
            "E": [],
            "R": null,
            "P": null,
            "r_": null,
            "T": null,
            "_r": null,
            "A": null
          }
        },
        "c": {
          "p": true,
          "m": 0,
          "s": 0
        },
        "e": false,
        "k": null,
        "I": false,
        "i_": false,
        "r": "__Type",
        "C": []
      }
    },
    "__TypeKind": {
      "E": {
        "a": "__TypeKind",
        "e_": "An enum describing what kind of type a given `__Type` is.",
        "_e": {
          "ENUM": {
            "n": "ENUM",
            "d": "Indicates this type is an enum. `enumValues` is a valid field.",
            "D": "N"
          },
          "INPUT_OBJECT": {
            "n": "INPUT_OBJECT",
            "d": "Indicates this type is an input object. `inputFields` is a valid field.",
            "D": "N"
          },
          "INTERFACE": {
            "n": "INTERFACE",
            "d": "Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields.",
            "D": "N"
          },
          "LIST": {
            "n": "LIST",
            "d": "Indicates this type is a list. `ofType` is a valid field.",
            "D": "N"
          },
          "NON_NULL": {
            "n": "NON_NULL",
            "d": "Indicates this type is a non-null. `ofType` is a valid field.",
            "D": "N"
          },
          "OBJECT": {
            "n": "OBJECT",
            "d": "Indicates this type is an object. `fields` and `interfaces` are valid fields.",
            "D": "N"
          },
          "SCALAR": {
            "n": "SCALAR",
            "d": "Indicates this type is a scalar.",
            "D": "N"
          },
          "UNION": {
            "n": "UNION",
            "d": "Indicates this type is a union. `possibleTypes` is a valid field.",
            "D": "N"
          }
        },
        "_r": "__TypeKind"
      }
    }
  },
  "directives": {
    "deprecated": {
      "name": "deprecated",
      "description": "Marks an element of a GraphQL schema as no longer supported.",
      "locations": [
        "ARGUMENT_DEFINITION",
        "ENUM_VALUE",
        "FIELD_DEFINITION",
        "INPUT_FIELD_DEFINITION"
      ],
      "args": {
        "reason": {
          "n": "reason",
          "d": "Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).",
          "t": "String",
          "D": "\"No longer supported\"",
          "V": null,
          "i": false
        }
      },
      "is_repeatable": false
    },
    "include": {
      "name": "include",
      "description": "Directs the executor to include this field or fragment only when the `if` argument is true.",
      "locations": [
        "FIELD",
        "FRAGMENT_SPREAD",
        "INLINE_FRAGMENT"
      ],
      "args": {
        "if": {
          "n": "if",
          "d": "Included when true.",
          "t": "Boolean!",
          "D": null,
          "V": null,
          "i": false
        }
      },
      "is_repeatable": false
    },
    "skip": {
      "name": "skip",
      "description": "Directs the executor to skip this field or fragment when the `if` argument is true.",
      "locations": [
        "FIELD",
        "FRAGMENT_SPREAD",
        "INLINE_FRAGMENT"
      ],
      "args": {
        "if": {
          "n": "if",
          "d": "Skipped when true.",
          "t": "Boolean!",
          "D": null,
          "V": null,
          "i": false
        }
      },
      "is_repeatable": false
    },
    "specifiedBy": {
      "name": "specifiedBy",
      "description": "Exposes a URL that specifies the behavior of this scalar.",
      "locations": [
        "SCALAR"
      ],
      "args": {
        "url": {
          "n": "url",
          "d": "The URL that specifies the behavior of this scalar.",
          "t": "String!",
          "D": null,
          "V": null,
          "i": false
        }
      },
      "is_repeatable": false
    }
  },
  "implements": {},
  "query_type": "Query",
  "mutation_type": null,
  "subscription_type": null,
  "disable_introspection": false,
  "enable_federation": false,
  "federation_subscription": false,
  "auth": {
    "allowed_private_ops": 0,
    "allowed_group_ops": {},
    "allowed_owner_ops": 0,
    "oidc_providers": [],
    "jwks_providers": [],
    "jwt_providers": []
  },
  "schemas": [],
  "http_headers": {},
  "search_config": {
    "indices": {}
  },
  "enable_caching": false
}
