package component:grafbase;

interface types {
    enum header-error {
        invalid-header-value,
        invalid-header-name,
    }

    resource context {
        get: func(name: string) -> option<string>;
        set: func(name: string, value: string);
        delete: func(name: string) -> option<string>;
    }

    resource headers {
        get: func(name: string) -> result<option<string>, header-error>;
        set: func(name: string, value: string) -> result<_, header-error>;
        delete: func(name: string) -> result<option<string>, header-error>;
    }

    record error-response {
        status: option<u16>,
        message: string,
    }
}

world gateway {
    use types.{headers, error-response, context};

    export on-subgraph-request: func(context: context, headers: headers) -> result<_, error-response>;
}
